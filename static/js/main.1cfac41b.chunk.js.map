{"version":3,"sources":["components/api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getHeroes","query","providesTags","getFilters","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","heroId","useGetFiltersQuery","useGetHeroesQuery","useDeleteHeroMutation","useCreateHeroMutation","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","type","aria-label","onClick","Spinner","role","HeroesList","arr","data","heroes","isLoading","isSuccess","isError","activeClass","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","useCallback","id","unwrap","elements","length","map","props","HeroesAddForm","addHero","onSubmit","e","preventDefault","formData","FormData","target","obj","key","forEach","value","reset","htmlFor","required","placeholder","height","filtersSlice","createSlice","initialState","reducers","filtersActive","action","payload","reducer","actions","HeroesFilters","list","dispatch","useDispatch","i","label","App","stringMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cfac41b.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3001\" }),\r\n  tagTypes: [\"heroes\", \"filters\"],\r\n  endpoints: (build) => ({\r\n    getHeroes: build.query({\r\n      query: () => \"/heroes\",\r\n      providesTags: [\"heroes\"],\r\n    }),\r\n    getFilters: build.query({\r\n      query: () => \"/filters\",\r\n      providesTags: [\"filters\"],\r\n    }),\r\n    createHero: build.mutation({\r\n      query: (hero) => ({ url: \"/heroes\", method: \"POST\", body: hero }),\r\n      invalidatesTags: [\"heroes\"],\r\n    }),\r\n    deleteHero: build.mutation({\r\n      query: (heroId) => ({ url: `/heroes/${heroId}`, method: \"DELETE\" }),\r\n      invalidatesTags: [\"heroes\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetFiltersQuery,\r\n  useGetHeroesQuery,\r\n  useDeleteHeroMutation,\r\n  useCreateHeroMutation,\r\n} = apiSlice;\r\n","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n      <img\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n        <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\" onClick={onDelete}></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useCallback, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useDeleteHeroMutation, useGetHeroesQuery } from \"../api/apiSlice\";\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesList = () => {\n  const {\n    data: heroes = [],\n    isLoading,\n    isSuccess,\n    isError,\n  } = useGetHeroesQuery();\n  const [deleteHero] = useDeleteHeroMutation();\n\n  const activeClass = useSelector((state) => state.filters.activeClass);\n\n  const filteredHeroes = useMemo(() => {\n    const filteredHeroes = heroes.slice();\n    return activeClass === \"all\"\n      ? filteredHeroes\n      : filteredHeroes.filter((hero) => hero.element === activeClass);\n  }, [heroes, activeClass]);\n\n  const onDelete = useCallback(\n    (id) => {\n      deleteHero(id).unwrap();\n    },\n    [deleteHero]\n  );\n\n  const renderHeroesList = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">Героев пока нет</h5>;\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <HeroesListItem key={id} {...props} onDelete={() => onDelete(id)} />\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n\n  return (\n    (isLoading && <Spinner />) ||\n    (isError && <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>) ||\n    (isSuccess && <ul>{elements}</ul>)\n  );\n};\n\nexport default HeroesList;\n","import { v4 as key } from \"uuid\";\n\nimport { useCreateHeroMutation } from \"../api/apiSlice\";\n\nconst HeroesAddForm = () => {\n  const [addHero] = useCreateHeroMutation();\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const obj = {};\n    obj.id = key();\n    formData.forEach((key, value) => (obj[value] = key));\n    addHero(obj).unwrap();\n    e.target.reset();\n  };\n  return (\n    <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmit}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          Имя нового героя\n        </label>\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"Как меня зовут?\"\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Описание\n        </label>\n        <textarea\n          required\n          name=\"description\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"Что я умею?\"\n          style={{ height: \"130px\" }}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Выбрать элемент героя\n        </label>\n        <select required className=\"form-select\" id=\"element\" name=\"element\">\n          <option>Я владею элементом...</option>\n          <option value=\"fire\">Огонь</option>\n          <option value=\"water\">Вода</option>\n          <option value=\"wind\">Ветер</option>\n          <option value=\"earth\">Земля</option>\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Создать\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  activeClass: \"all\",\n};\n\nconst filtersSlice = createSlice({\n  name: \"filters\",\n  initialState,\n  reducers: {\n    filtersActive: (state, action) => {\n      state.activeClass = action.payload;\n    },\n  },\n});\n\nconst { reducer, actions } = filtersSlice;\n\nexport default reducer;\n\nexport const { filtersActive } = actions;\n","import { filtersActive } from \"./filtersSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetFiltersQuery } from \"../api/apiSlice\";\n\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesFilters = () => {\n  const { data: filters = [], isLoading } = useGetFiltersQuery();\n  const dispatch = useDispatch();\n  const activeClass = useSelector((state) => state.filters.activeClass);\n\n  const createBtnsGroup = (list) => {\n    return list.map(({ name, label, className }, i) => {\n      return (\n        <button\n          className={`${className} ${activeClass === name && \"active\"}`}\n          onClick={() => name !== activeClass && dispatch(filtersActive(name))}\n          key={i}\n        >\n          {label}\n        </button>\n      );\n    });\n  };\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">\n          {(isLoading && <Spinner />) || createBtnsGroup(filters)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport filters from \"../components/heroesFilters/filtersSlice\";\nimport { apiSlice } from \"../components/api/apiSlice\";\n\nconst stringMiddleware = (store) => (dispatch) => (actions) => {\n  if (typeof actions === \"string\") {\n    return dispatch({ type: actions });\n  } else {\n    return dispatch(actions);\n  }\n};\n\nconst store = configureStore({\n  reducer: { filters, [apiSlice.reducerPath]: apiSlice.reducer },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}